name: build_ami

on:
  workflow_dispatch:
  pull_request:
    branches: 
      - main
    types: [closed]  


jobs:
  integration-tests:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup system environment
        run: |
          sudo groupadd csye6225
          sudo useradd -g csye6225 -s /usr/sbin/nologin csye6225
          sudo mkdir -p /var/log/webapplogs/
          sudo chown -R csye6225:csye6225 /var/log/webapplogs/
          sudo chmod -R 775 /var/log/webapplogs/

      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      - name: Initialize Database
        run: |
          sudo systemctl start postgresql.service
          sudo systemctl status postgresql.service
          sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'postgres';"

      - name: Setup Database
        run: |
          sudo -u postgres psql -c "CREATE USER mihirmakwana WITH PASSWORD '1998';"
          sudo -u postgres psql -c "ALTER USER mihirmakwana WITH SUPERUSER CREATEDB CREATEROLE REPLICATION BYPASSRLS;"
          sudo -u postgres psql -c "CREATE DATABASE webapp OWNER mihirmakwana;"

      - name: "Create .env file"
        run: |
          touch .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_NAME=webapp" >> .env
          echo "DB_USER=mihirmakwana" >> .env
          echo "DB_PASSWORD=1998" >> .env
          echo "DB_DIALECT=postgres" >> .env
          echo "PORT=3000" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  build_ami:
    needs: integration-tests
    if : success()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
  
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
  
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: "Create .env file"
        working-directory: ${{ github.workspace }}  
        run: |
          touch .env
          echo DB_HOST=localhost >> .env  # Assuming the service is accessed via localhost within the runner
          echo DB_NAME=${{ vars.DB_NAME }} >> .env
          echo DB_USER=${{ vars.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DIALECT=postgres >> .env  # Example of a non-sensitive data, hardcoded  
          echo PORT=${{ vars.PORT }} >> .env

      - name: zip
        working-directory: ${{ github.workspace }}
        run: zip -r webapp.zip .

      - name: Install Packer
        run: packer init ./packer/packer.pkr.hcl
        
      - name: Build packer
        run: packer build ./packer/packer.pkr.hcl  
